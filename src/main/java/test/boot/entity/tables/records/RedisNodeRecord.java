/*
 * This file is generated by jOOQ.
*/
package test.boot.entity.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import test.boot.entity.tables.RedisNode;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedisNodeRecord extends UpdatableRecordImpl<RedisNodeRecord> implements Record4<Integer, String, Integer, Integer> {

    private static final long serialVersionUID = 2030548944;

    /**
     * Setter for <code>PUBLIC.REDIS_NODE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.REDIS_NODE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.REDIS_NODE.HOST</code>.
     */
    public void setHost(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.REDIS_NODE.HOST</code>.
     */
    public String getHost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.REDIS_NODE.PORT</code>.
     */
    public void setPort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.REDIS_NODE.PORT</code>.
     */
    public Integer getPort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.REDIS_NODE.C_ID</code>.
     */
    public void setCId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.REDIS_NODE.C_ID</code>.
     */
    public Integer getCId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RedisNode.REDIS_NODE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RedisNode.REDIS_NODE.HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return RedisNode.REDIS_NODE.PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return RedisNode.REDIS_NODE.C_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedisNodeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedisNodeRecord value2(String value) {
        setHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedisNodeRecord value3(Integer value) {
        setPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedisNodeRecord value4(Integer value) {
        setCId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedisNodeRecord values(Integer value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RedisNodeRecord
     */
    public RedisNodeRecord() {
        super(RedisNode.REDIS_NODE);
    }

    /**
     * Create a detached, initialised RedisNodeRecord
     */
    public RedisNodeRecord(Integer id, String host, Integer port, Integer cId) {
        super(RedisNode.REDIS_NODE);

        set(0, id);
        set(1, host);
        set(2, port);
        set(3, cId);
    }
}
