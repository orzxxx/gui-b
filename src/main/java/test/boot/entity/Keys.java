/*
 * This file is generated by jOOQ.
*/
package test.boot.entity;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import test.boot.entity.tables.RedisCollection;
import test.boot.entity.tables.RedisConnection;
import test.boot.entity.tables.RedisNode;
import test.boot.entity.tables.records.RedisCollectionRecord;
import test.boot.entity.tables.records.RedisConnectionRecord;
import test.boot.entity.tables.records.RedisNodeRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>PUBLIC</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<RedisConnectionRecord, Integer> IDENTITY_REDIS_CONNECTION = Identities0.IDENTITY_REDIS_CONNECTION;
    public static final Identity<RedisCollectionRecord, Integer> IDENTITY_REDIS_COLLECTION = Identities0.IDENTITY_REDIS_COLLECTION;
    public static final Identity<RedisNodeRecord, Integer> IDENTITY_REDIS_NODE = Identities0.IDENTITY_REDIS_NODE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RedisConnectionRecord> CONSTRAINT_9 = UniqueKeys0.CONSTRAINT_9;
    public static final UniqueKey<RedisCollectionRecord> CONSTRAINT_B = UniqueKeys0.CONSTRAINT_B;
    public static final UniqueKey<RedisNodeRecord> CONSTRAINT_7 = UniqueKeys0.CONSTRAINT_7;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<RedisConnectionRecord, Integer> IDENTITY_REDIS_CONNECTION = createIdentity(RedisConnection.REDIS_CONNECTION, RedisConnection.REDIS_CONNECTION.ID);
        public static Identity<RedisCollectionRecord, Integer> IDENTITY_REDIS_COLLECTION = createIdentity(RedisCollection.REDIS_COLLECTION, RedisCollection.REDIS_COLLECTION.ID);
        public static Identity<RedisNodeRecord, Integer> IDENTITY_REDIS_NODE = createIdentity(RedisNode.REDIS_NODE, RedisNode.REDIS_NODE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<RedisConnectionRecord> CONSTRAINT_9 = createUniqueKey(RedisConnection.REDIS_CONNECTION, "CONSTRAINT_9", RedisConnection.REDIS_CONNECTION.ID);
        public static final UniqueKey<RedisCollectionRecord> CONSTRAINT_B = createUniqueKey(RedisCollection.REDIS_COLLECTION, "CONSTRAINT_B", RedisCollection.REDIS_COLLECTION.ID);
        public static final UniqueKey<RedisNodeRecord> CONSTRAINT_7 = createUniqueKey(RedisNode.REDIS_NODE, "CONSTRAINT_7", RedisNode.REDIS_NODE.ID);
    }
}
